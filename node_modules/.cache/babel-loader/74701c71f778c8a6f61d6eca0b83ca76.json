{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/contenteditable.js\";\n// https://stackoverflow.com/questions/22677931/react-js-onchange-event-for-contenteditable\nimport React, { PropTypes } from \"react\";\nimport escapeTextForBrowser from \"react/lib/escapeTextForBrowser\";\nconst UncontrolledContentEditable = React.createClass({\n  displayName: \"UncontrolledContentEditable\",\n  propTypes: {\n    component: PropTypes.func,\n    onChange: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editable: PropTypes.bool\n  },\n\n  getDefaultProps() {\n    return {\n      component: React.DOM.div,\n      editable: false\n    };\n  },\n\n  getInitialState() {\n    return {\n      initialText: this.props.text\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.editable && !this.props.editable) {\n      this.setState({\n        initialText: nextProps.text\n      });\n    }\n  },\n\n  componentWillUpdate(nextProps) {\n    if (!nextProps.editable && this.props.editable) {\n      this.getDOMNode().innerHTML = escapeTextForBrowser(this.state.initialText);\n    }\n  },\n\n  render() {\n    const html = escapeTextForBrowser(this.props.editable ? this.state.initialText : this.props.text);\n    return /*#__PURE__*/_jsxDEV(this.props.component, {\n      onInput: this.handleChange,\n      onBlur: this.handleChange,\n      contentEditable: this.props.editable,\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  },\n\n  handleChange(e) {\n    if (!e.target.textContent.trim().length) {\n      e.target.innerHTML = '';\n    }\n\n    this.props.onChange(e);\n  }\n\n});\nexport default UncontrolledContentEditable;","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/contenteditable.js"],"names":["React","PropTypes","escapeTextForBrowser","UncontrolledContentEditable","createClass","propTypes","component","func","onChange","isRequired","text","string","placeholder","editable","bool","getDefaultProps","DOM","div","getInitialState","initialText","props","componentWillReceiveProps","nextProps","setState","componentWillUpdate","getDOMNode","innerHTML","state","render","html","handleChange","__html","e","target","textContent","trim","length"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AAEA,MAAMC,2BAA2B,GAAGH,KAAK,CAACI,WAAN,CAAkB;AAAA;AACpDC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEL,SAAS,CAACM,IADZ;AAETC,IAAAA,QAAQ,EAAEP,SAAS,CAACM,IAAV,CAAeE,UAFhB;AAGTC,IAAAA,IAAI,EAAET,SAAS,CAACU,MAHP;AAITC,IAAAA,WAAW,EAAEX,SAAS,CAACU,MAJd;AAKTE,IAAAA,QAAQ,EAAEZ,SAAS,CAACa;AALX,GADyC;;AASpDC,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLT,MAAAA,SAAS,EAAEN,KAAK,CAACgB,GAAN,CAAUC,GADhB;AAELJ,MAAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAdmD;;AAgBpDK,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLC,MAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWV;AADnB,KAAP;AAGD,GApBmD;;AAsBpDW,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACT,QAAV,IAAsB,CAAC,KAAKO,KAAL,CAAWP,QAAtC,EAAgD;AAC9C,WAAKU,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAEG,SAAS,CAACZ;AADX,OAAd;AAGD;AACF,GA5BmD;;AA8BpDc,EAAAA,mBAAmB,CAACF,SAAD,EAAY;AAC7B,QAAI,CAACA,SAAS,CAACT,QAAX,IAAuB,KAAKO,KAAL,CAAWP,QAAtC,EAAgD;AAC9C,WAAKY,UAAL,GAAkBC,SAAlB,GAA8BxB,oBAAoB,CAAC,KAAKyB,KAAL,CAAWR,WAAZ,CAAlD;AACD;AACF,GAlCmD;;AAoCpDS,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG3B,oBAAoB,CAAC,KAAKkB,KAAL,CAAWP,QAAX,GAChC,KAAKc,KAAL,CAAWR,WADqB,GAEhC,KAAKC,KAAL,CAAWV,IAFoB,CAAjC;AAKA,wBACE,aAAM,KAAN,CAAY,SAAZ;AAAsB,MAAA,OAAO,EAAE,KAAKoB,YAApC;AACsB,MAAA,MAAM,EAAE,KAAKA,YADnC;AAEsB,MAAA,eAAe,EAAE,KAAKV,KAAL,CAAWP,QAFlD;AAGsB,MAAA,uBAAuB,EAAE;AAACkB,QAAAA,MAAM,EAAEF;AAAT;AAH/C;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAhDmD;;AAkDpDC,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,WAAT,CAAqBC,IAArB,GAA4BC,MAAjC,EAAyC;AACvCJ,MAAAA,CAAC,CAACC,MAAF,CAASP,SAAT,GAAqB,EAArB;AACD;;AAED,SAAKN,KAAL,CAAWZ,QAAX,CAAoBwB,CAApB;AACD;;AAxDmD,CAAlB,CAApC;AA2DA,eAAe7B,2BAAf","sourcesContent":["// https://stackoverflow.com/questions/22677931/react-js-onchange-event-for-contenteditable\n\nimport React, { PropTypes } from \"react\";\nimport escapeTextForBrowser from \"react/lib/escapeTextForBrowser\";\n\nconst UncontrolledContentEditable = React.createClass({\n  propTypes: {\n    component: PropTypes.func,\n    onChange: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editable: PropTypes.bool\n  },\n\n  getDefaultProps() {\n    return {\n      component: React.DOM.div,\n      editable: false\n    };\n  },\n\n  getInitialState() {\n    return {\n      initialText: this.props.text\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.editable && !this.props.editable) {\n      this.setState({\n        initialText: nextProps.text\n      });\n    }\n  },\n\n  componentWillUpdate(nextProps) {\n    if (!nextProps.editable && this.props.editable) {\n      this.getDOMNode().innerHTML = escapeTextForBrowser(this.state.initialText);\n    }\n  },\n\n  render() {\n    const html = escapeTextForBrowser(this.props.editable ?\n      this.state.initialText :\n      this.props.text\n    );\n\n    return (\n      <this.props.component onInput={this.handleChange}\n                            onBlur={this.handleChange}\n                            contentEditable={this.props.editable}\n                            dangerouslySetInnerHTML={{__html: html}} />\n    );\n  },\n\n  handleChange(e) {\n    if (!e.target.textContent.trim().length) {\n      e.target.innerHTML = '';\n    }\n\n    this.props.onChange(e);\n  }\n});\n\nexport default UncontrolledContentEditable;"]},"metadata":{},"sourceType":"module"}