{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { docalculations } from \"../../calculations\";\nexport function useCellCalculations(notebook) {\n  _s();\n\n  const [cells, setCells] = useState({});\n  const [results, setResults] = useState({});\n  useEffect(() => {\n    if (notebook == null) {\n      return;\n    }\n\n    for (let i in notebook.cells) {\n      const cellID = notebook.cells[i];\n      var cellRef = firebase.database().ref(\"cells/\" + cellID);\n      cellRef.on(\"value\", snapshot => {\n        const data = snapshot.val();\n        setCells({ ...cells,\n          cellID: data\n        });\n      });\n    }\n  }, [notebook.cells]);\n  useEffect(() => {\n    if (notebook == null) {\n      return;\n    }\n\n    const hasMissingCell = false;\n\n    for (const i in notebook.cells) {\n      const cellID = notebook.cells[i];\n\n      if (cells[cellID] == null) {\n        hasMissingCell = true;\n        break;\n      }\n    }\n\n    if (hasMissingCell == false) {\n      setResults(docalculations(cells, notebook.cells));\n    }\n  }, [cells]);\n  return {\n    cells,\n    results\n  };\n}\n\n_s(useCellCalculations, \"aSmCPXb2C/iJ+WVgxmvovN2GjfI=\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/usecellcalculations.js"],"names":["useEffect","useState","docalculations","useCellCalculations","notebook","cells","setCells","results","setResults","i","cellID","cellRef","firebase","database","ref","on","snapshot","data","val","hasMissingCell"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,OAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,IAAI,IAAhB,EAAsB;AAClB;AACH;;AAED,SAAK,IAAIK,CAAT,IAAcL,QAAQ,CAACC,KAAvB,EAA8B;AAC5B,YAAMK,MAAM,GAAGN,QAAQ,CAACC,KAAT,CAAeI,CAAf,CAAf;AAEA,UAAIE,OAAO,GAAGC,QAAQ,CAACC,QAAT,GAAoBC,GAApB,CAAwB,WAAWJ,MAAnC,CAAd;AACAC,MAAAA,OAAO,CAACI,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAc;AAChC,cAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAZ,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYK,UAAAA,MAAM,EAAEO;AAApB,SAAD,CAAR;AACD,OAHD;AAID;AACF,GAdQ,EAcN,CAACb,QAAQ,CAACC,KAAV,CAdM,CAAT;AAgBAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,IAAI,IAAhB,EAAsB;AAClB;AACH;;AAED,UAAMe,cAAc,GAAG,KAAvB;;AACA,SAAK,MAAMV,CAAX,IAAgBL,QAAQ,CAACC,KAAzB,EAAgC;AAC9B,YAAMK,MAAM,GAAGN,QAAQ,CAACC,KAAT,CAAeI,CAAf,CAAf;;AAEA,UAAIJ,KAAK,CAACK,MAAD,CAAL,IAAiB,IAArB,EAA2B;AACzBS,QAAAA,cAAc,GAAG,IAAjB;AAEA;AACD;AACF;;AAED,QAAIA,cAAc,IAAI,KAAtB,EAA6B;AAC3BX,MAAAA,UAAU,CAACN,cAAc,CAACG,KAAD,EAAQD,QAAQ,CAACC,KAAjB,CAAf,CAAV;AACD;AACF,GAnBQ,EAmBN,CAACA,KAAD,CAnBM,CAAT;AAqBA,SAAO;AAAEA,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACD;;GA1CeJ,mB","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { docalculations } from \"../../calculations\";\n\nexport function useCellCalculations(notebook) {\n  const [cells, setCells] = useState({});\n  const [results, setResults] = useState({});\n\n  useEffect(() => {\n    if (notebook == null) {\n        return;\n    }\n\n    for (let i in notebook.cells) {\n      const cellID = notebook.cells[i];\n\n      var cellRef = firebase.database().ref(\"cells/\" + cellID);\n      cellRef.on(\"value\", (snapshot) => {\n        const data = snapshot.val();\n        setCells({ ...cells, cellID: data });\n      });\n    }\n  }, [notebook.cells]);\n\n  useEffect(() => {\n    if (notebook == null) {\n        return;\n    }\n\n    const hasMissingCell = false;\n    for (const i in notebook.cells) {\n      const cellID = notebook.cells[i];\n\n      if (cells[cellID] == null) {\n        hasMissingCell = true;\n\n        break;\n      }\n    }\n\n    if (hasMissingCell == false) {\n      setResults(docalculations(cells, notebook.cells));\n    }\n  }, [cells]);\n\n  return { cells, results };\n}\n"]},"metadata":{},"sourceType":"module"}