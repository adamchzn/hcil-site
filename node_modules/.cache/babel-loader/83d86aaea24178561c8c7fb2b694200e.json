{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\n/**\n * Hook that alerts clicks outside of the passed ref\n */\n\nfunction useOutsideAlerter(ref) {\n  _s();\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useOutsideAlerter;","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/useoutsidealerter.js"],"names":["React","useRef","useEffect","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAAA;;AAC9BF,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KARa,CAUd;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAhBQ,EAgBN,CAACD,GAAD,CAhBM,CAAT;AAiBD;;GAlBQD,iB;;AAoBT,eAAeA,iBAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nexport default useOutsideAlerter;\n"]},"metadata":{},"sourceType":"module"}