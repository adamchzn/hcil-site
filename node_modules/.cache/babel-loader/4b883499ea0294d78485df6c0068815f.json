{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\nimport AddButton from \"./../../images/add-button.svg\";\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\nimport { useCellCalculations } from \"./usecellcalculations.js\";\n\nfunction Notebook({\n  notebookID\n}) {\n  _s();\n\n  const [notebook, setNotebook] = useState(null);\n  const [popupShown, setPopupShown] = useState(false); // to do: unsubscribe from old notebook ID\n\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", snapshot => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n  const {\n    results,\n    cells\n  } = useCellCalculations(notebook);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notebook-container\",\n    children: [/*#__PURE__*/_jsxDEV(NotebookHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: notebook == null ? \"Loading...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NotebookTitle, {\n          notebook: notebook,\n          notebookID: notebookID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), notebook.cells == null ? \"Create a new cell\" : Object.values(notebook.cells || {}).map(cellID => /*#__PURE__*/_jsxDEV(Cell, {\n          cellID: cellID,\n          cell: cells[cellID],\n          data: results[cellID],\n          notebook: notebook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-container\",\n          onClick: () => createNewCell(notebookID, notebook),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"add-button\",\n            src: AddButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \"New cell\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), popupShown ? /*#__PURE__*/_jsxDEV(CellMenuPopup, {\n      setPopupHidden: () => setPopupShown(false),\n      cell: cell,\n      cellID: cellID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notebook, \"44HrrBji2f1wSqAyCCgtR4jufSk=\", false, function () {\n  return [useCellCalculations];\n});\n\n_c = Notebook;\nexport default Notebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebook\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js"],"names":["React","useState","useEffect","firebase","createNewCell","Cell","NotebookTitle","NotebookHeader","useCellCalculations","Notebook","notebookID","notebook","setNotebook","popupShown","setPopupShown","notebookRef","database","ref","on","snapshot","data","val","results","cells","Object","values","map","cellID","AddButton","cell"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAkC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C,CAFgC,CAIhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,WAAW,GAAGZ,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,eAAeP,UAAvC,CAAlB;AACAK,IAAAA,WAAW,CAACG,EAAZ,CAAe,OAAf,EAAyBC,QAAD,IAAc;AACpC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAT,MAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,KAHD;AAID,GANQ,EAMN,CAACV,UAAD,CANM,CAAT;AAQA,QAAM;AAACY,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBf,mBAAmB,CAACG,QAAD,CAA5C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGA,QAAQ,IAAI,IAAZ,GACC,YADD,gBAGC;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEA,QAAzB;AAAmC,UAAA,UAAU,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGC,QAAQ,CAACY,KAAT,IAAkB,IAAlB,GACG,mBADH,GAEGC,MAAM,CAACC,MAAP,CAAcd,QAAQ,CAACY,KAAT,IAAkB,EAAhC,EAAoCG,GAApC,CAAyCC,MAAD,iBACtC,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEA,MAAd;AAAsB,UAAA,IAAI,EAAEJ,KAAK,CAACI,MAAD,CAAjC;AAA2C,UAAA,IAAI,EAAEL,OAAO,CAACK,MAAD,CAAxD;AAAkE,UAAA,QAAQ,EAAEhB;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADF,CAJN,eAOE;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,UAAA,OAAO,EAAE,MAAMP,aAAa,CAACM,UAAD,EAAaC,QAAb,CAF9B;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,GAAG,EAAEiB;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAuBGf,UAAU,gBACL,QAAC,aAAD;AACE,MAAA,cAAc,EAAE,MAAMC,aAAa,CAAC,KAAD,CADrC;AAEE,MAAA,IAAI,EAAEe,IAFR;AAGE,MAAA,MAAM,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA,YADK,GAMH,IA7BV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAhDQlB,Q;UAakBD,mB;;;KAblBC,Q;AAkDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\n\nimport AddButton from \"./../../images/add-button.svg\";\n\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\nimport { useCellCalculations } from \"./usecellcalculations.js\";\n\nfunction Notebook({ notebookID }) {\n  const [notebook, setNotebook] = useState(null);\n  const [popupShown, setPopupShown] = useState(false);\n\n  // to do: unsubscribe from old notebook ID\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n\n  const {results, cells} = useCellCalculations(notebook);\n\n  return (\n    <div className=\"notebook-container\">\n      <NotebookHeader />\n      <div className=\"page-container\">\n        {notebook == null ? (\n          \"Loading...\"\n        ) : (\n          <>\n            <NotebookTitle notebook={notebook} notebookID={notebookID} />\n            {notebook.cells == null\n              ? \"Create a new cell\"\n              : Object.values(notebook.cells || {}).map((cellID) => (\n                  <Cell cellID={cellID} cell={cells[cellID]} data={results[cellID]} notebook={notebook} />\n                ))}\n            <div\n              className=\"add-button-container\"\n              onClick={() => createNewCell(notebookID, notebook)}\n            >\n              <img className=\"add-button\" src={AddButton}></img>\n              New cell\n            </div>\n          </>\n        )}\n      </div>\n      {popupShown ? (\n            <CellMenuPopup\n              setPopupHidden={() => setPopupShown(false)}\n              cell={cell}\n              cellID={cellID}\n            />\n          ) : null}\n    </div>\n  );\n}\n\nexport default Notebook;\n"]},"metadata":{},"sourceType":"module"}