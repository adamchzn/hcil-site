{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/cell.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CellName from \"./cellname\";\nimport CellDescription from \"./celldescription\";\nimport CellType from \"./celltype\";\nimport firebase from \"firebase\";\nimport { CELL_TYPES } from \"../../constants.js\";\nimport CalculationCell from \"./calculationcell\";\nimport ChartCell from \"./chartcell\";\nimport DataCell from \"./datacell\";\nimport Options from \"./../../images/options.svg\";\n\nfunction Cell({\n  cellID,\n  cell,\n  data\n}) {\n  _s();\n\n  const [popupShown, setPopupShown] = useState(false);\n\n  if (cell == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  let cellOutput;\n\n  switch (cell.type) {\n    case CELL_TYPES.calculation:\n      cellOutput = /*#__PURE__*/_jsxDEV(CalculationCell, {\n        cell: cell,\n        cellID: cellID,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case CELL_TYPES.chart:\n      cellOutput = /*#__PURE__*/_jsxDEV(ChartCell, {\n        cell: cell,\n        cellID: cellID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case CELL_TYPES.loadData:\n      cellOutput = /*#__PURE__*/_jsxDEV(DataCell, {\n        cell: cell,\n        cellID: cellID,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-options\",\n      children: [/*#__PURE__*/_jsxDEV(CellName, {\n        cell: cell,\n        cellID: cellID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell-configure\",\n        children: \"Configure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CellType, {\n        cell: cell,\n        cellID: cellID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cell-menu\",\n        src: Options,\n        setPopupShown: setPopupShown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), popupShown ? /*#__PURE__*/_jsxDEV(CellMenuPopup, {\n        setPopupHidden: () => setPopupShown(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-output\",\n      children: cellOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CellDescription, {\n      cell: cell,\n      cellID: cellID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cell, \"3s3o9bVkFE3J9Ei9WDJsh8rCwko=\");\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/cell.js"],"names":["React","useState","useEffect","CellName","CellDescription","CellType","firebase","CELL_TYPES","CalculationCell","ChartCell","DataCell","Cell","cellID","cell","data","popupShown","setPopupShown","cellOutput","type","calculation","chart","loadData","Options"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAd,EAAsC;AAAA;;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;;AAEA,MAAIY,IAAI,IAAI,IAAZ,EAAkB;AAChB,wBAAO;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAII,UAAJ;;AACA,UAAQJ,IAAI,CAACK,IAAb;AACE,SAAKX,UAAU,CAACY,WAAhB;AACEF,MAAAA,UAAU,gBAAG,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEJ,IAAvB;AAA6B,QAAA,MAAM,EAAED,MAArC;AAA6C,QAAA,IAAI,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAAb;AACA;;AACF,SAAKP,UAAU,CAACa,KAAhB;AACEH,MAAAA,UAAU,gBAAG,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEJ,IAAjB;AAAuB,QAAA,MAAM,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAb;AACA;;AACF,SAAKL,UAAU,CAACc,QAAhB;AACEJ,MAAAA,UAAU,gBAAG,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEJ,IAAhB;AAAsB,QAAA,MAAM,EAAED,MAA9B;AAAsC,QAAA,IAAI,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,cAAb;AACA;AATJ;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAhB;AAAsB,QAAA,MAAM,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEC,IAAhB;AAAsB,QAAA,MAAM,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,GAAG,EAAEU,OAFP;AAGE,QAAA,aAAa,EAAEN;AAHjB;AAAA;AAAA;AAAA;AAAA,cAJF,EASGD,UAAU,gBACT,QAAC,aAAD;AAAe,QAAA,cAAc,EAAE,MAAMC,aAAa,CAAC,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,cADS,GAEP,IAXN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEJ,IAAvB;AAA6B,MAAA,MAAM,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvCQD,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CellName from \"./cellname\";\nimport CellDescription from \"./celldescription\";\nimport CellType from \"./celltype\";\nimport firebase from \"firebase\";\nimport { CELL_TYPES } from \"../../constants.js\";\n\nimport CalculationCell from \"./calculationcell\";\nimport ChartCell from \"./chartcell\";\nimport DataCell from \"./datacell\";\n\nimport Options from \"./../../images/options.svg\";\n\nfunction Cell({ cellID, cell, data }) {\n  const [popupShown, setPopupShown] = useState(false);\n\n  if (cell == null) {\n    return <div className=\"cell-container\">Loading...</div>;\n  }\n\n  let cellOutput;\n  switch (cell.type) {\n    case CELL_TYPES.calculation:\n      cellOutput = <CalculationCell cell={cell} cellID={cellID} data={data} />;\n      break;\n    case CELL_TYPES.chart:\n      cellOutput = <ChartCell cell={cell} cellID={cellID} />;\n      break;\n    case CELL_TYPES.loadData:\n      cellOutput = <DataCell cell={cell} cellID={cellID} data={data} />;\n      break;\n  }\n\n  return (\n    <div className=\"cell-container\">\n      <div className=\"cell-options\">\n        <CellName cell={cell} cellID={cellID} />\n        <div className=\"cell-configure\">Configure</div>\n        <CellType cell={cell} cellID={cellID} />\n        <img\n          className=\"cell-menu\"\n          src={Options}\n          setPopupShown={setPopupShown}\n        ></img>\n        {popupShown ? (\n          <CellMenuPopup setPopupHidden={() => setPopupShown(false)} />\n        ) : null}\n      </div>\n      <div className=\"cell-output\">{cellOutput}</div>\n      <CellDescription cell={cell} cellID={cellID} />\n    </div>\n  );\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}