{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/datacell.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport { dataToString } from \"../../utilities.js\";\n\nfunction DataCell({\n  cell,\n  columnID,\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-table\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : Object.keys(data).map(columnID => /*#__PURE__*/_jsxDEV(TableColumn, {\n      columnID: columnID,\n      data: data[columnID]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_c = DataCell;\nexport default DataCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataCell\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/datacell.js"],"names":["React","firebase","dataToString","DataCell","cell","columnID","data","Object","keys","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAlB,EAA4C;AAC1C,sBACE;AAAA,cACGA,IAAI,IAAI,IAAR,gBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,GAAlB,CAAuBJ,QAAD,iBACpB,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,QAAvB;AAAiC,MAAA,IAAI,EAAEC,IAAI,CAACD,QAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF;AAJJ,mBADF;AAWD;;KAZQF,Q;AAcT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase\";\n\nimport { dataToString } from \"../../utilities.js\";\n\nfunction DataCell({ cell, columnID, data }) {\n  return (\n    <>\n      {data == null ? (\n        <div className=\"data-table\">Loading...</div>\n      ) : (\n        Object.keys(data).map((columnID) => (\n          <TableColumn columnID={columnID} data={data[columnID]} />\n        ))\n      )}\n    </>\n  );\n}\n\nexport default DataCell;\n"]},"metadata":{},"sourceType":"module"}