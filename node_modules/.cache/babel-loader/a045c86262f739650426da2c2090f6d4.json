{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\nimport AddButton from \"./../../images/add-button.svg\";\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\n\nfunction Notebook({\n  notebookID\n}) {\n  _s();\n\n  const [notebook, setNotebook] = useState(null); // to do: unsubscribe from old notebook ID\n\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", snapshot => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notebook-container\",\n    children: [/*#__PURE__*/_jsxDEV(NotebookHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: notebook == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: \"\\\"Loading...\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NotebookTitle, {\n          notebook: notebook,\n          notebookID: notebookID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), notebook.cells == null ? \"Create a new cell\" : Object.values(notebook.cells || {}).map(cellID => /*#__PURE__*/_jsxDEV(Cell, {\n          cellID: cellID,\n          notebook: notebook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-button-container\",\n          onClick: () => createNewCell(notebookID, notebook),\n          children: [\"New cell\", /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"add-button\",\n            src: AddButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notebook, \"8U5UDw6RpPQsZyjvchfenhvIW7w=\");\n\n_c = Notebook;\nexport default Notebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebook\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js"],"names":["React","useState","useEffect","firebase","createNewCell","Cell","NotebookTitle","NotebookHeader","Notebook","notebookID","notebook","setNotebook","notebookRef","database","ref","on","snapshot","data","val","cells","Object","values","map","cellID","AddButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAkC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC,CADgC,CAGhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,WAAW,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,eAAeL,UAAvC,CAAlB;AACAG,IAAAA,WAAW,CAACG,EAAZ,CAAe,OAAf,EAAyBC,QAAD,IAAc;AACpC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAP,MAAAA,WAAW,CAACM,IAAD,CAAX;AACD,KAHD;AAID,GANQ,EAMN,CAACR,UAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGC,QAAQ,IAAI,IAAZ,gBACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEA,QAAzB;AAAmC,UAAA,UAAU,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGC,QAAQ,CAACS,KAAT,IAAkB,IAAlB,GACG,mBADH,GAEGC,MAAM,CAACC,MAAP,CAAcX,QAAQ,CAACS,KAAT,IAAkB,EAAhC,EAAoCG,GAApC,CAAyCC,MAAD,iBACtC,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEA,MAAd;AAAsB,UAAA,QAAQ,EAAEb;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,CAJN,eAOE;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,UAAA,OAAO,EAAE,MAAMN,aAAa,CAACK,UAAD,EAAaC,QAAb,CAF9B;AAAA,8CAKE;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,GAAG,EAAEc;AAAjC;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtCQhB,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\n\nimport AddButton from \"./../../images/add-button.svg\";\n\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\n\nfunction Notebook({ notebookID }) {\n  const [notebook, setNotebook] = useState(null);\n\n  // to do: unsubscribe from old notebook ID\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n\n  return (\n    <div className=\"notebook-container\">\n      <NotebookHeader />\n      <div className=\"page-container\">\n        {notebook == null ? (\n          <div className=\"page-container\">\"Loading...\"</div>\n        ) : (\n          <>\n            <NotebookTitle notebook={notebook} notebookID={notebookID} />\n            {notebook.cells == null\n              ? \"Create a new cell\"\n              : Object.values(notebook.cells || {}).map((cellID) => (\n                  <Cell cellID={cellID} notebook={notebook} />\n                ))}\n            <div\n              className=\"add-button-container\"\n              onClick={() => createNewCell(notebookID, notebook)}\n            >\n              New cell\n              <img className=\"add-button\" src={AddButton}></img>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notebook;\n"]},"metadata":{},"sourceType":"module"}