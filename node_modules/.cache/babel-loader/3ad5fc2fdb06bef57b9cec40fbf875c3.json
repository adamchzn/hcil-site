{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\nimport AddButton from \"./../../images/add-button.svg\";\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\n\nfunction Notebook({\n  notebookID\n}) {\n  _s();\n\n  const [notebook, setNotebook] = useState(null);\n  console.log(notebook.cells); // to do: unsubscribe from old notebook ID\n\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", snapshot => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notebook-container\",\n    children: [/*#__PURE__*/_jsxDEV(NotebookHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: notebook == null ? \"Loading...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NotebookTitle, {\n          notebook: notebook,\n          notebookID: notebookID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), notebook.cells == null ? \"Create a new cell\" : Object.values(notebook.cells).map(cellID => /*#__PURE__*/_jsxDEV(Cell, {\n          cellID: cellID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 63\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"add-button\",\n          src: AddButton,\n          onClick: () => createNewCell(notebookID, notebook)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notebook, \"8U5UDw6RpPQsZyjvchfenhvIW7w=\");\n\n_c = Notebook;\nexport default Notebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebook\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/notebook.js"],"names":["React","useState","useEffect","firebase","createNewCell","Cell","NotebookTitle","NotebookHeader","Notebook","notebookID","notebook","setNotebook","console","log","cells","notebookRef","database","ref","on","snapshot","data","val","Object","values","map","cellID","AddButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAkC;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,KAArB,EAFgC,CAKhC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,WAAW,GAAGZ,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,eAAeR,UAAvC,CAAlB;AACAM,IAAAA,WAAW,CAACG,EAAZ,CAAe,OAAf,EAAyBC,QAAD,IAAc;AACpC,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAV,MAAAA,WAAW,CAACS,IAAD,CAAX;AACD,KAHD;AAID,GANQ,EAMN,CAACX,UAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGC,QAAQ,IAAI,IAAZ,GACC,YADD,gBAGC;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEA,QAAzB;AAAmC,UAAA,UAAU,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,QAAQ,CAACI,KAAT,IAAkB,IAAlB,GACG,mBADH,GAEGQ,MAAM,CAACC,MAAP,CAAcb,QAAQ,CAACI,KAAvB,EAA8BU,GAA9B,CAAmCC,MAAD,iBAAY,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,gBAA9C,CALN,eAME;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,GAAG,EAAEC,SAFP;AAGE,UAAA,OAAO,EAAE,MAAMtB,aAAa,CAACK,UAAD,EAAaC,QAAb;AAH9B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GArCQF,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { createNewCell } from \"./../../utilities.js\";\n\nimport AddButton from \"./../../images/add-button.svg\";\n\nimport Cell from \"./cell.js\";\nimport NotebookTitle from \"./notebooktitle.js\";\nimport NotebookHeader from \"./notebookheader.js\";\n\nfunction Notebook({ notebookID }) {\n  const [notebook, setNotebook] = useState(null);\n  console.log(notebook.cells);\n\n\n  // to do: unsubscribe from old notebook ID\n  useEffect(() => {\n    var notebookRef = firebase.database().ref(\"notebooks/\" + notebookID);\n    notebookRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      setNotebook(data);\n    });\n  }, [notebookID]);\n\n  return (\n    <div className=\"notebook-container\">\n      <NotebookHeader />\n      <div className=\"page-container\">\n        {notebook == null ? (\n          \"Loading...\"\n        ) : (\n          <>\n            <NotebookTitle notebook={notebook} notebookID={notebookID} />\n            <Cell />\n            {notebook.cells == null\n              ? \"Create a new cell\"\n              : Object.values(notebook.cells).map((cellID) => <Cell cellID={cellID} />)}\n            <img\n              className=\"add-button\"\n              src={AddButton}\n              onClick={() => createNewCell(notebookID, notebook)}\n            ></img>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notebook;\n"]},"metadata":{},"sourceType":"module"}