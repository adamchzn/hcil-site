{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamchazan/Documents/hcil-site/src/components/notebook/cellmenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport useOutsideAlerter from \"./../../useoutsidealerter.js\";\nimport { CELL_TYPES } from \"../../constants.js\";\nimport CalculationsCellMenuContents from \"./calculationscellmenucontents\";\n\nfunction CellMenuPopup({\n  setPopupHidden,\n  cell,\n  cellID\n}) {\n  _s();\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, setPopupHidden);\n  let cellMenuContents;\n\n  switch (cell.type) {\n    case CELL_TYPES.calculation:\n      cellMenuContents = /*#__PURE__*/_jsxDEV(CalculationsCellMenuContents, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case CELL_TYPES.chart:\n      cellMenuContents = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-menu-row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Change input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-menu-row delete-row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case CELL_TYPES.loadData:\n      cellMenuContents = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-menu-row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-menu-row delete-row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n      break;\n  }\n\n  return (\n    /*#__PURE__*/\n    // Menu contents should change depending on the type of cell\n    _jsxDEV(\"div\", {\n      className: \"cell-menu-popup\",\n      ref: wrapperRef,\n      children: cellMenuContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(CellMenuPopup, \"kF1gJ+9qozGrx9T2BaxcGZVoPDQ=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = CellMenuPopup;\nexport default CellMenuPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellMenuPopup\");","map":{"version":3,"sources":["/Users/adamchazan/Documents/hcil-site/src/components/notebook/cellmenu.js"],"names":["React","useRef","useOutsideAlerter","CELL_TYPES","CalculationsCellMenuContents","CellMenuPopup","setPopupHidden","cell","cellID","wrapperRef","cellMenuContents","type","calculation","chart","loadData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,4BAAP,MAAyC,gCAAzC;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA;AAAxB,CAAvB,EAAyD;AAAA;;AACvD,QAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACAC,EAAAA,iBAAiB,CAACO,UAAD,EAAaH,cAAb,CAAjB;AAEA,MAAII,gBAAJ;;AACA,UAAQH,IAAI,CAACI,IAAb;AACE,SAAKR,UAAU,CAACS,WAAhB;AACEF,MAAAA,gBAAgB,gBACd,QAAC,4BAAD;AAA8B,QAAA,IAAI,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA,cADF;AAGA;;AACF,SAAKJ,UAAU,CAACU,KAAhB;AACEH,MAAAA,gBAAgB,gBACd;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBADF;AAUA;;AACF,SAAKP,UAAU,CAACW,QAAhB;AACEJ,MAAAA,gBAAgB,gBACd;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBADF;AAUA;AA7BJ;;AAgCA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAED,UAAtC;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD;;GA3CQL,a;UAEPH,iB;;;KAFOG,a;AA6CT,eAAeA,aAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport useOutsideAlerter from \"./../../useoutsidealerter.js\";\nimport { CELL_TYPES } from \"../../constants.js\";\nimport CalculationsCellMenuContents from \"./calculationscellmenucontents\";\n\nfunction CellMenuPopup({ setPopupHidden, cell, cellID }) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, setPopupHidden);\n\n  let cellMenuContents;\n  switch (cell.type) {\n    case CELL_TYPES.calculation:\n      cellMenuContents = (\n        <CalculationsCellMenuContents cell={cell} />\n      );\n      break;\n    case CELL_TYPES.chart:\n      cellMenuContents = (\n        <>\n          <div className=\"cell-menu-row\">\n            <p>Change input</p>\n          </div>\n          <div className=\"cell-menu-row delete-row\">\n            <p>Delete</p>\n          </div>\n        </>\n      );\n      break;\n    case CELL_TYPES.loadData:\n      cellMenuContents = (\n        <>\n          <div className=\"cell-menu-row\">\n            <p>Filter data</p>\n          </div>\n          <div className=\"cell-menu-row delete-row\">\n            <p>Delete</p>\n          </div>\n        </>\n      );\n      break;\n  }\n\n  return (\n    // Menu contents should change depending on the type of cell\n    <div className=\"cell-menu-popup\" ref={wrapperRef}>\n      {cellMenuContents}\n    </div>\n  );\n}\n\nexport default CellMenuPopup;"]},"metadata":{},"sourceType":"module"}